<?php


namespace ctrl;


use model\drException;
use model\drFun;
use model\drTpl;
use model\lib\cache;
use model\trade;
use mysql_xdevapi\Exception;

class fw extends drTpl
{
    private $ma=[];
    function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->htmlFile="hcadmin.phtml";
        $ma= $this->getLogin()->createTableUserMa()->getRowByKey( $this->getLogin()->getUserId() );

        $this->ma= $ma;
        if(2==$this->getLogin()->isKaiTongFWS( $this->ma['c_user_id'])  &&  in_array(self::$_URI['act'],['xia'] )  ){

        }elseif( !$ma || $ma['role']!=11 ) $this->redirect('/login?loginback='.urlencode('/fw'),'请使用服务商账号登录');


    }

    function act_card($p){
        switch ($p[0]){
            case 'add':

                $this->getLogin()->createUserOne()->checkGoogle( trim( $_POST['google'] ) );
                $var = $_POST;
                if( $var['c_id']=='' || $var['c_name']=='' || $var['c_bank']=='') $this->throw_exception( '收款人、卡号、银行不允许为空!');

                $var['c_user_id']= $this->ma['c_user_id'];
                $var['c_id']= trim($var['c_id']);
                $var['ma_user_id']= $this->getLogin()->getUserId();

                $cnt = $this->getLogin()->createTableMaCard()->getCount([ 'c_id'=>$var['c_id'] ] );
                if( $cnt>0) $this->throw_exception( $var['c_id'].' 已存在！');
                $var['ctime']= time();
                $this->getLogin()->createTableMaCard()->append($var);
                $this->redirect("","添加成功");
                break;
            case 'set':

                /*

                */
                $id = intval($p[1]);
                //$where=['id'=>$id,'c_user_id'=> $this->ma['c_user_id'],'ma_user_id'=> $this->getLogin()->getUserId() ];
                $row = $this->getLogin()->createTableMaCard()->getRowByKey( $id);
                if( $row['c_user_id']!= $this->ma['c_user_id'] || $row['ma_user_id']!= $this->getLogin()->getUserId() ){
                    $this->throw_exception("非法设置卡",2020041403);
                }
                $var =['c_id'=>$row['c_id'],'c_name'=>$row['c_name'],'c_bank'=>$row['c_bank'],'c_add'=>$row['c_add']];
                $opt_value="设置安全卡：". print_r($var,true ) ;
                $this->getLogin()->createLogGt()->append(  $this->getLogin()->getUserId()  ,3, $opt_value);
                $this->getLogin()->createUserOne()->opAttr( $var );
                $this->redirect( '',"设置成功");
                break;
            case 'list':
            default:

                $where=['c_user_id'=> $this->ma['c_user_id'],'ma_user_id'=> $this->getLogin()->getUserId() ];
                $card = $this->getLogin()->createTableMaCard()->selectWithPage( $where,['id'=>'desc'] ,60 );
                $sv['bank']= $this->getLogin()->createVip()->getVipBank( $this->getLogin()->getUserId() );
                $sv['px']=1;
                $this->assign('card', $card)->assign('sv',$sv );

        }
    }

    function getRankCUserID(){
        //return $this->ma['c_user_id']+20000000;
        return $this->getLogin()->createVip()->getCUserID2Fw( $this->ma['c_user_id'] );
    }

    function isKaiTongFWS(){

        return $this->getLogin()->isKaiTongFWS( $this->ma['c_user_id']);
    }

    function act_xia($p){
        $yesType=[31];
        $where=['cz_user_id'=>$this->ma['c_user_id']];

        switch ($p[0]){
            case 'imgUpload':
                $ex_id= intval($p[1]);
                $row = $this->getLogin()->createTableExport()->getRowByKey(  $ex_id );
                if( $row['ma_user_id']!= $this->ma['user_id']) $this->throw_exception("非法操作");
                drFun::decodeOptValue( $row);
                $row['opt_value']['img']='/'.$_POST['fname'] ;
                $trade = new trade();
                $row['opt_value']['log'][]= $trade->getCzVar( 64, $row['type'] );
                $this->getLogin()->createTableExport()->updateByKey( $ex_id, ['opt_value'=>drFun::json_encode( $row['opt_value'])] );
                $this->redirect($this->getReferer(),"图片上传成功");

                break;
            case 'cancel': #取消
                $trade = new trade();
                $ex_id= intval($p[1]);
                $row = $this->getLogin()->createTableMcExport()->getRowByKey($ex_id);
                if( $row['ma_user_id']!= $this->ma['user_id']) $this->throw_exception("非法操作");
                if(! in_array( $row['type'], $yesType) ) $this->throw_exception("状态有错误",20041608);
                drFun::decodeOptValue( $row);

                unset($row['opt_value']['img']);

                //客户自己取消 回到 不可抢状态
                $trade->doTransferByConsole( $p[1], $this->ma['c_user_id'] , 1 );

                $row['opt_value']['log'][]= $trade->getCzVar( 65, $row['type'] );
                $this->getLogin()->createTableMcExport()->updateByKey($ex_id,['ma_user_id'=>0 ,'opt_value'=>drFun::json_encode($row['opt_value'] )]);
                $this->redirect("","取消成功");

                break;
            case 'do':
                $trade = new trade();
                //if( !in_array( $p[2],[21] )) $this->throw_exception( "无权限处理",20041701);
                $type=21;

                $ex_id=  $p[1];
                $row = $this->getLogin()->createTableExport()->getRowByKey(  $p[1] );
                if( $row['ma_user_id']!= $this->ma['user_id']) $this->throw_exception( "非法处理",20041701);
                drFun::decodeOptValue($row);
                if( !$row['opt_value']['img'] ) $this->throw_exception( "请先上传凭证");

                #$fee= intval( abs( $row['money']*$this->ma['fee']/10000));

                //$this->drExit($fee);

                #$trade->doTransferByConsole( $p[1], $this->ma['c_user_id'] , $type );

                //$opt_value=[''];
                $row['opt_value']['log'][]= $trade->getCzVar( 62, $row['type'] );

                $bank=['c_id'=>$row['card_id'],'c_name'=> $row['card_name'],'c_bank'=>$row['card_bank'],'c_add'=>$row['card_address']];

                $opt_value=['ex_id'=> $p[1],'price'=>intval($row['money'])/100,'bank'=>$bank];
                $opt_value['img']= $row['opt_value']['img'];


                $this->getLogin()->createVip()->maBillCreate( $this->isKaiTongFWS()==2?270:260, $row['ma_user_id'], $row['money'] ,'XIA'.$p[1] ,['opt_value'=>drFun::json_encode( $opt_value)] );

                $this->getLogin()->createTableMcExport()->updateByKey($ex_id,[ 'opt_value'=>drFun::json_encode($row['opt_value'] )]);


                $this->redirect($this->getReferer(),"处理成功！");
                break;
            case 'qiang':
                $trade = new trade();
                $ex_id= intval($p[1]);
                $row = $this->getLogin()->createTableMcExport()->getRowByKey($ex_id);
                if( $row['cz_user_id']!= $this->ma['c_user_id']) $this->throw_exception("非法抢单");
                if( $row['ma_user_id']>0) $this->throw_exception("已被抢单");
                if(! in_array( $row['type'], $yesType) ) $this->throw_exception("状态有错误",20041608);
                drFun::decodeOptValue( $row);

                unset($row['opt_value']['img']);
                $row['opt_value']['log'][]= $trade->getCzVar( 66, $row['type'] );
                $this->getLogin()->createTableMcExport()->updateByKey($ex_id,['ma_user_id'=>$this->ma['user_id'],'opt_value'=>drFun::json_encode($row['opt_value'] )]);
                $this->redirect("","抢单成功");
                break;
            case 'load':
                $where['type']=$yesType;
                $where['ma_user_id']= $this->ma['user_id'];
                $doing = $this->getLogin()->createTableMcExport()->getAll( $where,['export_id'=>'asc'],[0,50]);

                $where['type']=$yesType;
                $where['ma_user_id']=0;
                $qiang = $this->getLogin()->createTableMcExport()->getAll( $where,['export_id'=>'asc'],[0,50]);

                drFun::arrayClear($qiang,['url']);
                drFun::arrayClear($doing,['url']);

                $this->assign('doing', $doing)->assign('qiang',$qiang);

                break;
        }

        //$this->assign('list', $list);
    }



    /**
     * 上分处理
     * @param $p
     * @throws drException
     */
    function act_live( $p ){
        switch ($p[0]){
            case 'paidui':

                $yue= 1000;
                if( $this->ma['amount']<$yue*100) $this->throw_exception("余额不足".$yue.'元 无法参与排队',2020041405 );
                $var=[];
                $var['c_user_id']= $this->getRankCUserID() ;//$this->ma['c_user_id']+20000000;
                $var['ma_user_id']= $this->getLogin()->getUserId();
                $this->getLogin()->createTablePayRank()->delByWhere( $var );
                $var['utime']= time();
                $this->getLogin()->createTablePayRank()->append( $var );
                $this->redirect( "",'已入队列');
                break;
            case 'paiduiOff':
                $var=[];
                $var['ma_user_id']= $this->getLogin()->getUserId();
                $this->getLogin()->createTablePayRank()->delByWhere( $var );
                $this->redirect( "",'已经取消');
                break;
            case 'cz':
                if($p[1]=='dao') $t=1;
                elseif( $p[1]=='bo'){
                    $t=2;
                }else{
                    $this->throw_exception("非法操作");
                }
                $fw_id= intval($_POST['fw_id']);

                $this->getLogin()->createVip()->chongzhiFromFw( $fw_id,$t,$this->ma['user_id'] );
                $this->redirect("","操作成功！");
                break;
            case 'dj':
            default:
                $sv=[];
                $sv['bank']= $this->getLogin()->createVip()->getVipBank( $this->getLogin()->getUserId() );
                $sv['ma']= $this->ma;
                $sv['opt_type']= $this->getLogin()->createVip()->getFwOptType();
                $sv['rank']= $this->getLogin()->createVip()->getPayRankByMaUid($this->getRankCUserID(), $this->ma['user_id']  );

                $sv['czList']= $this->getLogin()->createTableMaFuwu()->getAll(['ma_user_id'=>$this->ma['user_id']],['fw_id'=>'desc']);
                if( !$sv['czList']) $sv['czList']=[];
                else{
                    drFun::decodeOptValue( $sv['czList'] );
                    $this->getLogin()->createUser()->merge($sv['czList'],['key'=>['user_id'] ] );
                }
                $this->assign('sv',$sv );
        }
    }
}